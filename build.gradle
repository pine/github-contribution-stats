buildscript {
    ext {
        version = '0.2.0'
        description = 'GitHub contribution stat utilities.'
        group = 'moe.pine'
        websiteUrl = 'https://github.com/pine/github-contribution-stats'
        gitUrl = 'https://github.com/pine/github-contribution-stats.git'
        issueTrackerUrl = 'https://github.com/pine/github-contribution-stats/issues'
        userOrg = 'pinemz'

        lombokVersion = '1.18.6'
        okhttpVersion = '4.0.1'
        powermockVersion = '2.0.2'
    }
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://dl.bintray.com/pinemz/maven/' }
    }
    dependencies {
        classpath 'net.rdrei.android.buildtimetracker:gradle-plugin:0.11.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.11'
    }
}


// ----- Project ------------------------------------------

apply plugin: 'java-library'
apply plugin: 'idea'

group rootProject.ext.group
version rootProject.ext.version
description rootProject.ext.description

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    integrationTestImplementation.extendsFrom testImplementation
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:unchecked'
    options.compilerArgs << '-Xlint:deprecation'
}

dependencies {
    api 'org.jsoup:jsoup:1.12.1'
    api 'io.projectreactor.netty:reactor-netty:0.8.10.RELEASE'
    api 'moe.pine:nonnull:0.1.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation "org.powermock:powermock-reflect:$powermockVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
    testImplementation 'commons-io:commons-io:2.6'
}


// ----- Build Time Tracker -------------------------------

apply plugin: 'build-time-tracker'

buildtimetracker {
    reporters {
        summary {
            ordered true
            barstyle 'ascii'
        }
    }
}


// ----- JaCoCo ---------------------------------------

apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.3'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}


// ----- SpotBugs -------------------------------------

apply plugin: 'com.github.spotbugs'

spotbugs {
    toolVersion = '3.1.12'
    excludeFilter = file("${rootProject.projectDir}/findbugs-exclude.xml")
    spotbugsTest.enabled = false
}
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}


// ----- Bintray ------------------------------------------

apply from: "${rootProject.projectDir}/gradle/bintray.gradle"
